---
name: Conda Packages
env:
  DEFAULT_KHIOPS_REVISION: main
  DEFAULT_SAMPLES_REVISION: main
on:
  workflow_dispatch:
    inputs:
      khiops-revision:
        default: main
        description: khiops repo revision
      samples-revision:
        default: main
        description: khiops-samples repo revision
      release-channel:
        type: choice
        default: khiops-dev
        options: [khiops-dev, khiops]
        description: Anaconda channel to release
  push:
    tags: ['*']
  pull_request:
    paths: [packaging/conda/**, '!packaging/conda/README.md', .github/workflows/conda.yml]
defaults:
  run:
    shell: bash -el {0}
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        #  Use the oldest supported Mac OS and Ubuntu versions for GLIBC compatibility
        include:
          - os: ubuntu-20.04
            os-family: linux
          - os: windows-latest
            os-family: windows
          - os: macos-11
            os-family: macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4
        with:
          # Checkout the full repository to have the tags so versioneer works properly
          # See issue https://github.com/actions/checkout/issues/701
          fetch-depth: 0
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          python-version: '3.11'
      - name: Install Dependency Requirements for Building Conda Packages
        run: conda install conda-build=3.27.0 conda-verify
      # We need MacOS SDK 10.10 to build on Big Sur
      - name: Install Mac OS SDK 10.10
        if: runner.os == 'macOS'
        run: |
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.10.sdk.tar.xz
          sudo tar -zxvf MacOSX10.10.sdk.tar.xz -C /opt
      - name: Set KHIOPS_REVISION build input parameter
        run: |
          KHIOPS_REVISION="${{ inputs.khiops-revision || env.DEFAULT_KHIOPS_REVISION }}"
          echo "KHIOPS_REVISION=$KHIOPS_REVISION" >> "$GITHUB_ENV"
      - name: Build Khiops Conda Package (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir khiops-conda
          conda build --output-folder khiops-conda ./packaging/conda
      # In Linux/macOS we need the conda-forge channel to install their pinned versions
      - name: Build Khiops Conda Package (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir khiops-conda
          conda build --channel conda-forge --output-folder khiops-conda ./packaging/conda
      - name: Upload Khiops Conda Package
        uses: actions/upload-artifact@v4
        with:
          name: khiops-conda-${{ matrix.os-family }}
          path: ./khiops-conda
          retention-days: 7
  # Test Conda package on brand new environments
  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        env:
          - {os: ubuntu-20.04, os-family: linux}
          - {os: ubuntu-22.04, os-family: linux}
          - {os: windows-2019, os-family: windows}
          - {os: windows-2022, os-family: windows}
          - {os: macos-11, os-family: macos}
          - {os: macos-12, os-family: macos}
          - {os: macos-13, os-family: macos}
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    runs-on: ${{ matrix.env.os }}
    env:
      KHIOPS_SAMPLES_DIR: ./khiops-samples-repo
    steps:
      - name: Checkout Khiops samples
        uses: actions/checkout@v4
        with:
          repository: khiopsml/khiops-samples
          ref: ${{ inputs.samples-revision || env.DEFAULT_SAMPLES_REVISION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.KHIOPS_SAMPLES_DIR }}
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest  # needed for macOS 13
          python-version: ${{ matrix.python-version }}
      - name: Download Conda Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: khiops-conda-${{ matrix.env.os-family }}
          path: khiops-conda
      - name: Install the Khiops Conda pagkage (Windows)
        if: runner.os == 'Windows'
        run: conda install -c ./khiops-conda/ khiops
      # In Linux/macOS we need the conda-forge channel to install their pinned versions
      - name: Install the Khiops Conda package (Linux/macOS)
        if: runner.os != 'Windows'
        run: conda install -c conda-forge -c ./khiops-conda/ khiops
      - name: Test Khiops Installation Status
        run: kh-status
      - name: Test Conda Package Installation on Samples
        run: |
          kh-samples core -i train_predictor -e
          kh-samples core -i train_predictor_error_handling -e
          kh-samples core -i train_coclustering -e
          kh-samples sklearn -i khiops_classifier -e
          kh-samples sklearn -i khiops_coclustering -e
  # Release is only executed on tags
  # Note: For this job to work the secrets variables KHIOPS_ANACONDA_CHANNEL_TOKEN and
  #       KHIOPS_DEV_ANACONDA_CHANNEL_TOKEN must be set with valid anaconda.org access tokens
  release:
    if: github.ref_type == 'tag'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          # See the upload-artifact step in the build job for the explanation of this pattern
          path: ./khiops-conda
          pattern: khiops-conda-*
          merge-multiple: true
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          python-version: '3.11'
      - name: Install requirement packages
        run: conda install -y anaconda-client conda-build=3.27.0
      - name: Reindex the package directory
        run: conda-index ./khiops-conda
      - name: Upload the packages to anaconda.org
        run: |
          # Set the anaconda.org channel
          ANACONDA_CHANNEL="${{ inputs.release-channel || 'khiops-dev' }}"

          # For the release channel: upload without forcing
          if [[ "$ANACONDA_CHANNEL" == "khiops" ]]
          then
            anaconda --token "${{ secrets.KHIOPS_ANACONDA_CHANNEL_TOKEN }}" upload \
              --user "$ANACONDA_CHANNEL" ./khiops-conda/*/*.tar.bz2
          # For the dev channel: upload with forcing
          else
            anaconda --token "${{ secrets.KHIOPS_DEV_ANACONDA_CHANNEL_TOKEN }}" upload \
              --user "$ANACONDA_CHANNEL" --force ./khiops-conda/*/*.tar.bz2
          fi
      - name: Extract package version
        run: |
          PKG_VERSION=$(\
              conda search --override-channels --channel ./khiops-conda/ khiops \
                | awk '!/#|channels/ {print $2}' \
                | sort -u \
          )
          echo "PKG_VERSION=$PKG_VERSION" >> "$GITHUB_ENV"
      - name: Create the release zip archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: zip
          path: ./khiops-conda/
          filename: khiops-${{ env.PKG_VERSION }}-conda.zip
      - name: Upload conda package artifacts for all platforms
        uses: actions/upload-artifact@v4
        with:
          name: khiops-conda-all
          path: ./khiops-${{ env.PKG_VERSION }}-conda.zip
      - name: Release the zip archive
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ./khiops-${{ env.PKG_VERSION }}-conda.zip
          draft: false
          makeLatest: false
          prerelease: true
          updateOnlyUnreleased: true
