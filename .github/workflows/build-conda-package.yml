---
name: Conda Packages
env:
  DEFAULT_KHIOPS_REVISION: dev
  DEFAULT_SAMPLES_REVISION: main
on:
  workflow_dispatch:
    inputs:
      khiops-revision:
        default: dev
        description: khiops repo revision
      samples-revision:
        default: main
        description: khiops-samples repo revision
  push:
    tags: [v*]
  pull_request:
    paths: [.github/workflows/build-conda-package.yml]
defaults:
  run:
    shell: bash -el {0}
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        #  Use the oldest supported Mac OS and Ubuntu versions for GLIBC compatibility
        os: [ubuntu-20.04, windows-latest, macos-11]
    runs-on: ${{ matrix.os }}
    outputs:
      pkg-version: ${{ steps.get-pkg-version.outputs.pkg-version }}
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3
        with:
          # Checkout the full repository to have the tags so versioneer works properly
          # See issue https://github.com/actions/checkout/issues/701
          fetch-depth: 0
      # We move KHIOPS_REVISION to the environment so that we can use
      # them in both push and workflow_dispatch events
      - name: Move KHIOPS_REVISION to the environment (push/PR)
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        run: echo "KHIOPS_REVISION=${DEFAULT_KHIOPS_REVISION}" >> "$GITHUB_ENV"
      - name: Move KHIOPS_REVISION to the environment (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: echo "KHIOPS_REVISION=${{ inputs.khiops-revision }}" >> "$GITHUB_ENV"
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: khiops-python-env
      - name: Install Dependency Requirements for Building Conda Packages
        run: conda install conda-build=3.27.0 conda-verify
      # We need MacOS SDK 10.10 to build on Big Sur
      - name: Install Mac OS SDK 10.10
        if: runner.os == 'macOS'
        run: |
          wget https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.10.sdk.tar.xz
          sudo tar -zxvf MacOSX10.10.sdk.tar.xz -C /opt
      - name: Build Khiops Conda Package (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir khiops-conda
          conda build --output-folder khiops-conda ./packaging/conda
      # In Linux/macOS we need the conda-forge channel to install their pinned versions
      - name: Build Khiops Conda Package (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir khiops-conda
          conda build --channel conda-forge --output-folder khiops-conda ./packaging/conda
      - name: Extract Khiops Package Version
        id: get-pkg-version
        run: |
          PKG_VERSION=$(\
              conda search --override-channels --channel ./khiops-conda/ khiops \
                | awk '!/#|channels/ {print $2}' \
                | sort -u \
          )
          echo "pkg-version=$PKG_VERSION" >> "$GITHUB_OUTPUT"
      - name: Upload Khiops Conda Package
        uses: actions/upload-artifact@v3
        with:
          name: khiops-${{ steps.get-pkg-version.outputs.pkg-version }}-conda
          path: ./khiops-conda
          retention-days: 7
  # Test Conda package on brand new environments
  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2019
          - windows-2022
          - macos-11
          - macos-12
          - macos-13
        python-version: ['3.8', '3.9', '3.10', '3.11']
    runs-on: ${{ matrix.os }}
    env:
      KHIOPS_SAMPLES_DIR: ./khiops-samples-repo
    steps:
      # We move SAMPLES_REVISION to the environment so that we can use
      # them in both push and workflow_dispatch events
      - name: Move SAMPLES_REVISION to the environment (push event)
        if: github.event_name == 'push'
        run: echo "SAMPLES_REVISION=${DEFAULT_SAMPLES_REVISION}" >> "$GITHUB_ENV"
      - name: Move SAMPLES_REVISION to the environment (workflow_dispatch event)
        if: github.event_name == 'workflow_dispatch'
        run: echo "SAMPLES_REVISION=${{ inputs.samples-revision }}" >> "$GITHUB_ENV"
      - name: Checkout Khiops samples
        uses: actions/checkout@v3
        with:
          repository: khiopsml/khiops-samples
          ref: ${{ env.SAMPLES_REVISIONÂ }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.KHIOPS_SAMPLES_DIR }}
      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest  # needed for Mac OS 13
          python-version: ${{ matrix.python-version }}
          activate-environment: khiops-python-env
      - name: Download Conda Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: khiops-${{ needs.build-packages.outputs.pkg-version }}-conda
          path: khiops-conda
      - name: Install the Khiops Conda pagkage (Windows)
        if: runner.os == 'Windows'
        run: conda install -c ./khiops-conda/ khiops
      # In Linux/macOS we need the conda-forge channel to install their pinned versions
      - name: Install the Khiops Conda package (Linux/macOS)
        if: runner.os != 'Windows'
        run: conda install -c conda-forge -c ./khiops-conda/ khiops
      - name: Test Khiops Installation Status
        run: kh-status
      - name: Test Conda Package Installation on Samples
        run: |
          kh-samples core -i train_predictor -e
          kh-samples core -i train_predictor_error_handling -e
          kh-samples core -i train_coclustering -e
          kh-samples sklearn -i khiops_classifier -e
          kh-samples sklearn -i khiops_coclustering -e
  # Build and push Conda package release archive
  release:
    # We need `build-packages` because we use its output
    needs: [build, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Release the zip archive
        if: github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          artifacts: khiops-${{ needs.build-packages.outputs.pkg-version }}-conda
